import { ClientError, ClosedError } from "./errors.js";
/** Text of an SQL statement cached on the server. */
export class Sql {
    #client;
    #state;
    /** @private */
    constructor(client, state) {
        this.#client = client;
        this.#state = state;
    }
    /** @private */
    _getSqlId() {
        if (this.#state.closed !== undefined) {
            throw new ClosedError("SQL text is closed", this.#state.closed);
        }
        return this.#state.sqlId;
    }
    /** Remove the SQL text from the server, releasing resouces. */
    close() {
        this.#client._closeSql(this.#state, new ClientError("SQL was manually closed"));
    }
    /** True if the SQL text is closed (removed from the server). */
    get closed() {
        return this.#state.closed !== undefined;
    }
}
export function sqlToProto(sql) {
    if (sql instanceof Sql) {
        return { sqlId: sql._getSqlId() };
    }
    else {
        return { sql: "" + sql };
    }
}
