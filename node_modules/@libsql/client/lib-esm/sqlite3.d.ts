import Database from "better-sqlite3";
import type { Config, Client, Transaction, ResultSet, InStatement } from "./api.js";
import type { ExpandedConfig } from "./config.js";
export * from "./api.js";
export declare function createClient(config: Config): Client;
/** @private */
export declare function _createClient(config: ExpandedConfig): Client;
export declare class Sqlite3Client implements Client {
    #private;
    path: string;
    options: Database.Options;
    closed: boolean;
    /** @private */
    constructor(path: string, options: Database.Options);
    execute(stmt: InStatement): Promise<ResultSet>;
    batch(stmts: Array<InStatement>): Promise<Array<ResultSet>>;
    transaction(): Promise<Transaction>;
    close(): void;
}
export declare class Sqlite3Transaction implements Transaction {
    #private;
    database: Database.Database;
    /** @private */
    constructor(database: Database.Database);
    execute(stmt: InStatement): Promise<ResultSet>;
    rollback(): Promise<void>;
    commit(): Promise<void>;
    close(): void;
    get closed(): boolean;
}
